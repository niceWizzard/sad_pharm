# Generated by Django 5.1.7 on 2025-03-25 13:32

import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=128, primary_key=True, serialize=False)),
                ('category', models.CharField(choices=[('Antacids', 'Antacids'), ('Cough and Cold', 'Cough and Cold'), ('Digestive Health', 'Digestive Health'), ('Eye Care', 'Eye Care'), ('Medical Supplies & Personal Care', 'Medical Supplies & Personal Care'), ('Medical Supplies and Personal Care Products', 'Medical Supplies and Personal Care Products'), ('Over-the-Counter (OTC) Medicines', 'Over-the-Counter (OTC) Medicines'), ('Pain Relievers', 'Pain Relievers'), ('Pharmacy Machineries and Equipment', 'Pharmacy Machineries and Equipment'), ('Prescription Medicines', 'Prescription Medicines'), ('Skin Care', 'Skin Care'), ('Topical Treatments', 'Topical Treatments'), ('Vitamins and Supplements', 'Vitamins and Supplements')], default='Over-the-Counter (OTC) Medicines', max_length=64)),
                ('subcategory', models.CharField(choices=[('Antacid', 'Antacid'), ('Decongestants', 'Decongestants'), ('Expectorants', 'Expectorants'), ('Antihistamines', 'Antihistamines'), ('Antitussives', 'Antitussives'), ('Laxatives', 'Laxatives'), ('Lubricating Drops', 'Lubricating Drops'), ('First Aid Supplies', 'First Aid Supplies'), ('Personal Hygiene', 'Personal Hygiene'), ('Skin Care', 'Skin Care'), ('Incontinence Care', 'Incontinence Care'), ('Baby Care', 'Baby Care'), ('Eye Care', 'Eye Care'), ('Medical Supplies', 'Medical Supplies'), ('Bandages and Dressings', 'Bandages and Dressings'), ('First Aid Kits', 'First Aid Kits'), ('Pain Relievers', 'Pain Relievers'), ('Cough and Cold Remedies', 'Cough and Cold Remedies'), ('Analgesics', 'Analgesics'), ('Blood Pressure Monitors', 'Blood Pressure Monitors'), ('Thermometers', 'Thermometers'), ('Nebulizers', 'Nebulizers'), ('Oxygen Equipment', 'Oxygen Equipment'), ('Pulse Oximeters', 'Pulse Oximeters'), ('Surgical Instruments', 'Surgical Instruments'), ('Antibiotics', 'Antibiotics'), ('Antihypertensives', 'Antihypertensives'), ('Anti-Diabetic Medications', 'Anti-Diabetic Medications'), ('Sunscreen', 'Sunscreen'), ('Moisturizer', 'Moisturizer'), ('Acne Treatment', 'Acne Treatment'), ('Anti-fungal', 'Anti-fungal'), ('Anti-inflammatory', 'Anti-inflammatory'), ('Pain Relief', 'Pain Relief'), ('Multivitamins', 'Multivitamins'), ('Vitamin C', 'Vitamin C'), ('Omega-3 Fatty Acids', 'Omega-3 Fatty Acids'), ('Iron Supplements', 'Iron Supplements'), ('Vitamin D', 'Vitamin D'), ('Vitamin B Complex', 'Vitamin B Complex'), ('Vitamin E', 'Vitamin E'), ('Calcium', 'Calcium'), ('Iron', 'Iron'), ('Omega-3', 'Omega-3'), ('Probiotics', 'Probiotics'), ('Herbal Supplements', 'Herbal Supplements'), ('Joint Health', 'Joint Health'), ('Energy & Endurance', 'Energy & Endurance')], max_length=64)),
                ('item_name', models.CharField(max_length=128)),
                ('brand_name', models.CharField(max_length=128)),
                ('generic_name', models.CharField(max_length=128)),
                ('dosage_form', models.CharField(max_length=32)),
                ('strength_per_size', models.CharField(default=None, max_length=32, null=True)),
                ('packaging', models.CharField(choices=[('bottle', 'Bottle'), ('blister_pack', 'Blister Pack'), ('box', 'Box'), ('pack', 'Pack'), ('roll', 'Roll'), ('tube', 'Tube'), ('bar', 'Bar'), ('1_box', '1 box'), ('100_per_pack', "100's per pack"), ('1_roll', '1 roll'), ('1_tube', '1 tube'), ('1_bottle', '1 bottle'), ('1_bar', '1 bar'), ('1_kit', '1 kit'), ('20_per_bottle', "20's per bottle"), ('100ml_bottle', '100mL bottle'), ('10_per_blister', "10's per blister"), ('1_unit', '1 unit'), ('6_per_blister', "6's per blister"), ('10ml_vial', '10mL vial'), ('jar', 'Jar'), ('30_per_bottle', "30's per bottle"), ('60_per_bottle', "60's per bottle")], max_length=32)),
                ('quantity', models.IntegerField()),
                ('unit_size', models.CharField(choices=[('ml', 'Milliliters'), ('Each', 'Each'), ('Pack', 'Pack'), ('g', 'Grams'), ('Packs', 'Packs'), ('Rolls', 'Rolls'), ('Tubes', 'Tubes'), ('Bottles', 'Bottles'), ('Bars', 'Bars'), ('Kits', 'Kits'), ('Tablets', 'Tablets'), ('Units', 'Units'), ('Capsules', 'Capsules'), ('Vials', 'Vials'), ('Softgels', 'Softgels'), ('Tablet', 'Tablet')], default='Each', max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name='InventoryStock',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_of_delivery', models.DateField(default=django.utils.timezone.now)),
                ('expiration_date', models.DateField(default=django.utils.timezone.now)),
                ('count', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='InventoryTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='StockRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
            ],
        ),
    ]
